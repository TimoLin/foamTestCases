/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.1.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 0.001;

vertices
(
    (0   0   0)
    (576 0   0)
    (576 3.6    -0.09)
    (576 3.85    -0.09625)
    (576 9.1    -0.2275)
    (576 108   -2.7)
    (0   108   -2.7)
    (0   9.1    -0.2275)
    (0   3.85    -0.09625)
    (0   3.6    -0.09)
    (576 3.6    0.09)
    (576 3.85    0.09625)
    (576 9.1    0.2275)
    (576 108   2.7)
    (0   108   2.7)
    (0   9.1    0.2275)
    (0   3.85    0.09625)
    (0   3.6    0.09)


);

blocks
(
    //hex (0 1 2 7 0 1 8 13) (100 10 1) simpleGrading (3 1 1)
    //hex (7 2 3 6 13 8 9 12) (100 10 1) simpleGrading (3 1 1)
    //hex (6 3 4 5 12 9 10 11) (100 30 1) simpleGrading (3 5 1)
    hex (0 1 2 9 0 1 10 17)  (256 25 1) simpleGrading (15 0.7 1)
    hex (9 2 3 8 17 10 11 16)  (256 3 1) simpleGrading (15 1 1)
    hex (8 3 4 7 16 11 12 15)  (256 33 1) simpleGrading (15 1 1)
    hex (7 4 5 6 15 12 13 14)  (256 71 1) simpleGrading (15 20 1)
);

edges
(
);

boundary
(
    AXIS
    {
	type empty;
	faces
	(
	    (0 1 1 0)
	);
    }
    OUTLET
    {
        type patch;
        faces
        (
           (1 2 10 1)
           (2 3 11 10)
           (3 4 12 11)
           (4 5 13 12)
        );
    }
    COFLOW
    {
        type patch;
        faces
        (
            (15 14 6 7)
        );
    }
    PILOT
    {
        type patch;
        faces
        (
           (16 15 7 8)
        );
    }
    JET
    {
        type patch;
        faces
        (
           (0 9 17 0)
        );
    }
    WALL
    {
	type wall;
	faces
	(
            // inlet wall
           (17 16 8 9)
        // atmosphere
           (5 13 14 6)
	);
    }
    front
    {
        type wedge;
        faces
        (
           (0 1 2 9)
           (9 2 3 8)
           (8 3 4 7)
           (7 4 5 6)
        );
    }        
    back
    {
        type wedge;
        faces  
        (
            (0 17 10 1)
            (17 16 11 10)
            (16 15 12 11)
            (15 14 13 12)
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //
